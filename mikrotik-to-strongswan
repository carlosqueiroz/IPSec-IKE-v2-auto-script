# Certificate file name with extention. E.g.: vpnclient.p12
:local CertFile "vpnclient.p12"
# Password to import certificates from CertFile
:local Password "bMzJ4gfv8XLboB"
# IP address of IPSec IKEv2 server
:local ServerAddress "11.22.33.44"

:log warning "Check if script can use given parameters"
:put "Check if script can use given parameters"

:if ([/certificate find name="$CertFile_0"] != "") do={
          :log error "Script error: certificate $CertFile_0 already exists"
		  :put "Script error: certificate $CertFile_0 already exists"
          :error "Script error: certificate $CertFile_0 already exists"
     } else {
          :log info "Script: certificate name $CertFile_0 OK"
		  :put "Script: certificate name $CertFile_0 OK"
     }
:if ([/certificate find name="$CertFile_1"] != "") do={
          :log error "Script error: certificate $CertFile_1 already exists"
		  :put "Script error: certificate $CertFile_1 already exists"
          :error "Script error: certificate $CertFile_1 already exists"
     } else {
          :log info "Script: certificate name $CertFile_1 OK"
		  :put "Script: certificate name $CertFile_1 OK"
     }
:if ([/ip ipsec profile find name="ikev2-autoscript-vpn"] != "") do={
     :log error "Script error: ipsec profile ikev2-autoscript-vpn already exists"
	 :put "Script error: ipsec profile ikev2-autoscript-vpn already exists"
     :error "Script error: ipsec profile ikev2-autoscript-vpn already exists"
     } else {
     :log info "Script: ipsec profile name ikev2-autoscript-vpn OK"
	 :put "Script: ipsec profile name ikev2-autoscript-vpn OK"
     }
:if ([/ip ipsec proposal find name="ikev2-autoscript-vpn"] != "") do={
     :log error "Script error: ipsec proposal ikev2-autoscript-vpn already exists"
	 :put "Script error: ipsec proposal ikev2-autoscript-vpn already exists"
     :error "Script error: ipsec proposal ikev2-autoscript-vpn already exists"
     } else {
     :log info "Script: ipsec proposal name ikev2-autoscript-vpn OK"
	 :put "Script: ipsec proposal name ikev2-autoscript-vpn OK"
     }
:if ([/ip ipsec policy group find name="ikev2-autoscript-vpn"] != "") do={
     :log error "Script error: ipsec policy group ikev2-autoscript-vpn already exists"
	 :put "Script error: ipsec policy group ikev2-autoscript-vpn already exists"
     :error "Script error: ipsec policy group ikev2-autoscript-vpn already exists"
     } else {
     :log info "Script: ipsec policy group name ikev2-autoscript-vpn OK"
	 :put "Script: ipsec policy group name ikev2-autoscript-vpn OK"
     }
:if ([/ip ipsec policy find dst-address="0.0.0.0/0" src-address="0.0.0.0/0"] != "") do={
     :log error "Script error: ipsec policy for dst-address=0.0.0.0/0 already exists"
	 :put "Script error: ipsec policy for dst-address=0.0.0.0/0 already exists"
     :error "Script error: ipsec policy for dst-address=0.0.0.0/0 already exists"
     } else {
     :log info "Script: ipsec policy for dst-address=0.0.0.0/0 src-address=0.0.0.0/0 OK"
	 :put "Script: ipsec policy for dst-address=0.0.0.0/0 src-address=0.0.0.0/0 OK"
     }
:if ([/ip ipsec mode-config find name="ikev2-autoscript-vpn"] != "") do={
          :log error "Script error: mode-config ikev2-autoscript-vpn already exists"
		  :put "Script error: mode-config ikev2-autoscript-vpn already exists"
          :error "Script error: mode-config ikev2-autoscript-vpn already exists"
     } else {
     :log info "Script: mode-config name ikev2-autoscript-vpn OK"
	 :put "Script: mode-config name ikev2-autoscript-vpn OK"
     }
:if ([/ip ipsec peer find name="ikev2-autoscript-vpn"] !="") do={
     :log error "Script error: ipsec peer ikev2-autoscript-vpn already exists"
	 :put "Script error: ipsec peer ikev2-autoscript-vpn already exists"
     :error "Script error: ipsec peer ikev2-autoscript-vpn already exists"
     } else {
     :log info "Script: ipsec peer name ikev2-autoscript-vpn OK"
	 :put "Script: ipsec peer name ikev2-autoscript-vpn OK"
     }
:if ([/ip ipsec identity find name="ikev2-autoscript-vpn"] !="") do={
     :log error "Script error: ipsec identity ikev2-autoscript-vpn already exists"
	 :put "Script error: ipsec identity ikev2-autoscript-vpn already exists"
     :error "Script error: ipsec identity ikev2-autoscript-vpn already exists"
     } else {
     :log info "Script: ipsec identity name ikev2-autoscript-vpn OK"
	 :put "Script: ipsec identity name ikev2-autoscript-vpn OK"
     }
:log warning "Precheck OK"
:put "Precheck OK"
:log warning "Starting script"
:put "Starting script"
 
/certificate import file-name=$CertFile passphrase=$Password 
/certificate import file-name=$CertFile passphrase=$Password 

/ip ipsec profile add name="ikev2-autoscript-vpn" 
/ip ipsec proposal add name="ikev2-autoscript-vpn" pfs-group=none 
/ip ipsec policy group add name="ikev2-autoscript-vpn" 
/ip ipsec policy add group="ikev2-autoscript-vpn" proposal="ikev2-autoscript-vpn" template=yes dst-address="0.0.0.0/0" src-address="0.0.0.0/0" 
/ip ipsec mode-config add name="ikev2-autoscript-vpn" responder=no 
/ip ipsec peer add address=$ServerAddress exchange-mode=ike2 name="ikev2-autoscript-vpn" profile="ikev2-autoscript-vpn" 
/ip ipsec identity add auth-method=digital-signature certificate="$CertFile_1" generate-policy=port-strict mode-config="ikev2-autoscript-vpn" peer="ikev2-autoscript-vpn" policy-template-group="ikev2-autoscript-vpn" 

:log warning "Script finished"
:put "Script finished"

/system script
add dont-require-permissions=no name=removePeer owner=admin policy=\
    ftp,reboot,read,write,policy,test,password,sniff,sensitive,romon source="\
    \n #This script removes automatically created peer\r\
    \n\r\
	\n:log warning \"Starting removePeer script\"\r\
    \n:put \"Starting removePeer script\"\r\
	\n/ip ipsec policy remove [find group=\"ikev2-autoscript-vpn\" proposal=\"ikev2-autoscript-vpn\" template=yes dst-address=\"0.0.0.0/0\" src-address=\"0.0.0.0/0\"]\r\
	\n/ip ipsec identity remove [find auth-method=digital-signature certificate=\"$CertFile_1\" generate-policy=port-strict mode-config=\"ikev2-autoscript-vpn\" peer=\"ikev2-autoscript-vpn\" policy-template-group=\"ikev2-autoscript-vpn\"]\r\
    \n/ip ipsec peer remove [find address=\"$ServerAddress/32\" exchange-mode=ike2 name=\"ikev2-autoscript-vpn\" profile=\"ikev2-autoscript-vpn\" ]\r\
	\n/ip ipsec proposal remove [find name=\"ikev2-autoscript-vpn\" pfs-group=none]\r\
    \n/ip ipsec policy group remove [find name=\"ikev2-autoscript-vpn\"]\r\
	\n/ip ipsec profile remove [find name=\"ikev2-autoscript-vpn\"]\r\
	\n/ip ipsec mode-config remove [find name=\"ikev2-autoscript-vpn\" responder=no ]\r\
	\n/certificate remove [find name=$CertFile_1]\r\
	\n/certificate remove [find name=$CertFile_0]\r\
	\n/system script remove [find name=removePeer]\r\
    \n:log warning \"Script removePeer finished\"\r\
    \n:put \"Script removePeer finished\""
:log warning ("Rollback script removePeer created")
:put ("Rollback script removePeer created")
